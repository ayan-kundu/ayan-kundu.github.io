# -*- coding: utf-8 -*-

"""
Author Ay√§n

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kO7TpSy7Gccs5_yf06n53LTinTl8V2Ui
"""

import yt_dlp
import moviepy
from moviepy.video.io.VideoFileClip import VideoFileClip
import os

source_dir='/Users/ayana/Documents/python/ut_py'
mp4_dir=f'{source_dir}/downloads/MP4s/'
mp3_dir=f'{source_dir}/downloads/MP3s/'

# download from url #
def downloadUtubeVideo(url):
  ydl_opts={ 
    'format': 'mp4',
    #'format':'bestvideo[height<=480]+bestaudio/best[height<=480]',
    'postprocessors': [{ 
      'key': 'FFmpegVideoConvertor',
      'preferedformat': 'mp4', }],
  }

  with yt_dlp.YoutubeDL(ydl_opts) as ydl:
    ydl.download([url])
  files = os.listdir(source_dir)
  for file in files: 
    if file.endswith(".mp4"):
      print(f'\n<- {file} Download successful')

def videoHandler(mp4_dir,mp3_dir,source_dir):
  # Update files list
  files = os.listdir(source_dir)
  # Handle video files. Store in MP4 dir #
  print(f'{len(files)} Files in the paranet dir {files}')
  print(f'Path check for mp4_path: {os.path.exists(mp4_dir)} || mp3_path: {os.path.exists(mp3_dir)}')
  # Handling .mp4 files in the dir 
  for file in files: 
    if file.endswith(".mp4"):
      
      # extract audio from mp4 before moving download into mp4
      audioExtractor(file,mp3_dir,source_dir)
      
      # move download into mp4 dir
      source_path = os.path.join(source_dir, file) 
      destination_path = os.path.join(mp4_dir, file)
      os.rename(source_path,destination_path)
      print('<- download found and moved to MP4s!\n')
      
      # comment out to avoid deletion of mp4 #
      #os.remove(destination_path)

def audioExtractor(file,mp3_dir,source_dir):
  # Update files list
  #files = os.listdir(source_dir)
  video = VideoFileClip(f"{source_dir}/{file}");print('\n->mp4 grabbed for processing!')
  video.audio.write_audiofile(f"{mp3_dir}/{file[:-4]}.mp3")
  
  # Get the file size in bytes 
  mp3_file_size = os.path.getsize(f"{mp3_dir}/{file[:-4]}.mp3") 
  # Print the file size in a human-readable format (e.g., MB) 
  mp3_file_size_MB = mp3_file_size / (1024 * 1024) 

  print(f'->\tHey Ayan! mp3 ({mp3_file_size_MB:.3f} MB), ready to enjoy :3')

def deleteMP4s(mp4_dir):
  files = os.listdir(mp4_dir)
  for file in files: 
    os.remove(os.path.join(mp4_dir,file))




if __name__ =="__main__":
  utubeURL=input('Enter Youtube URL start download: ')
  #utubeURL='https://www.youtube.com/watch?v=aEClIy6f_78'
  print(f'Youtube URL: {utubeURL}\n')

  # just to convert mp4 to mp3
  if utubeURL[0] == ' ':
    videoHandler(mp4_dir,mp3_dir,source_dir) 
  # fetch mp4 from url and convert it to mp3
  else:
    # Download video from url in source dir
    downloadUtubeVideo(utubeURL);
    #print('<-\tVideo downloaded!\n')
    # Move mp4s to mp4 dir + manage mp3 dir
    videoHandler(mp4_dir,mp3_dir,source_dir)


  # Delete all MP4s
  #deleteMP4s(mp4_dir)